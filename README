AMF3 encoding/decoding extension for PHP
========================================

Description
-----------

The PHP AMF3 extension provides two functions to use in PHP scripts:

string amf3_encode(mixed $value)

- Encodes $value into an AMF3 byte-stream.
- On success, returns an AMF3 representation of the value.
- On error, returns FALSE and issues a warning message
  (the only error case is wrong argument count).

mixed amf3_decode(string $amf3 [, int &$count, bool $assoc = FALSE])

- Decodes $amf3 (AMF3 byte-stream) into a PHP value.
- On success, returns a resulting PHP value.
- On error, returns NULL and issues a warning message.
- If $count is provided, the number of bytes actually read from the string
  will be stored in it (the value of -1 indicates an error).
- If $assoc is set to TRUE, AMF values encoded as objects will be returned as
  associative arrays instead of class instances.


Installation
------------

To install the extension, type the following in the source directory:

phpize
./configure --enable-amf3
make
make install

This should install the extension to your default PHP extension directory.
If it doesn't work as expected, manually put the target amf3.so library to
what the 'extension_dir' variable in your php.ini points to.
Add the following line to the corresponding extension section in your php.ini:

extension=amf3.so


Usage constraints
-----------------

- NULL, boolean, integer, float (double), string and array values are
  fully convertible back and forth to their corresponding types.
- In a special case, PHP integers are converted into AMF3 doubles according
  to the specification (see the link below).
- A PHP array is encoded as a sequence (dense array) when it has integer
  keys that start with zero and have no gaps. In all other cases, an array is
  encoded as an associative array to avoid ambiguity.
- The AMF3 Object type is converted into an 'stdClass' object with the
  additional '_class' (class name) and '_data' (externalizable object's data)
  fields set when applicable.

Official Adobe AMF3 specification is available here:
http://download.macromedia.com/pub/labs/amf/amf3_spec_121207.pdf


History
-------

Version 1.1.0 [20/Feb/2013]
+ Support for previously unsupported AMF3 types.
+ Major code re-design.
+ License changed from GPL to MIT.

Version 1.0.0 [03/Feb/2010]
+ Encoding/decoding of basic PHP/AMF3 values.
